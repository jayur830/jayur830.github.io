{
	"Functional Component": {
		"scope": "javascriptreact,typescriptreact",
		"prefix": "fc",
		"body": [
			"import { Grid, styled } from '@mui/material';",
			"",
			"export default function ${1:${TM_DIRECTORY/^.+[\\/\\\\]+(.*)$/$1/}}() {",
			"  return (",
			"    <Grid>",
			"      $1",
			"    </Grid>",
			"  );",
			"}",
			""
		]
	},
	"Context Provider": {
		"scope": "javascript,typescript",
		"prefix": "cp",
		"body": [
			"import { useState } from 'react';",
			"",
			"import { createProvider } from '@/utils';",
			"",
			"function use${1:${TM_DIRECTORY/^.+[\\/\\\\]+(.*)$/$1/}}() {",
			"  const [count, setCount] = useState<number>(0);",
			"  ",
			"  return { count, setCount };",
			"}",
			"",
			"export const { Provider, useContext } = createProvider(use$1);",
			""
		]
	},
	"Zustand Store": {
		"scope": "javascript,typescript",
		"prefix": "zs",
		"body": [
			"import { createState } from '@/utils';",
			"",
			"interface InitialState {",
			"  count: number;",
			"  increase(): void;",
			"  decrease(): void;",
			"}",
			"",
			"export const use${1:${TM_DIRECTORY/^.+[\\/\\\\]+(.*)$/${1:/pascalcase}/}}State = createState<InitialState>((set) => ({",
			"  count: 0,",
			"  increase() {",
			"    set((state) => ({ count: state.count + 1 }));",
			"  },",
			"  decrease() {",
			"    set((state) => ({ count: state.count - 1 }));",
			"  },",
			"}));",
			""
		]
	},
	"GraphQL Resolver": {
		"scope": "javascript,typescript",
		"prefix": "gr",
		"body": [
			"// import package modules",
			"import { Resolver, Query, Mutation } from '@nestjs/graphql';",
			"",
			"// Import global modules",
			"",
			"// Import local modules",
			"",
			"@Resolver()",
			"export class HelloReslover {",
			"  @Query(() => String)",
			"  async hello() {",
			"    return 'hello';",
			"  }",
			"}",
			""
		]
	},
	"GraphQL Module": {
		"scope": "javascript,typescript",
		"prefix": "gm",
		"body": [
			"// import package modules",
			"import { Module } from '@nestjs/common';",
			"import { HelloReslover } from './hello.resolver';",
			"",
			"// Import global modules",
			"",
			"// Import local modules",
			"",
			"@Module({",
			"  providers: [HelloReslover],",
			"})",
			"export class HelloModule {}",
			""
		]
	},
	"GraphQL TypeDef": {
		"scope": "javascript,typescript",
		"prefix": "gtd",
		"body": [
			"// import package modules",
			"import { Field, Int, ObjectType } from '@nestjs/graphql';",
			"",
			"// Import global modules",
			"",
			"// Import local modules",
			"",
			"@ObjectType()",
			"export class VO {",
			"  @Field(() => String, {",
			"    nullable: true,",
			"    description: '',",
			"  })",
			"  a?: string;",
			"",
			"  @Field(() => Int, {",
			"    description: '',",
			"  })",
			"  b: number;",
			"}",
			""
		]
	},
	"TypeORM Entity": {
		"scope": "javascript,typescript",
		"prefix": "entity",
		"body": [
			"import { Column, Entity, PrimaryGeneratedColumn } from 'typeorm';",
			"",
			"@Entity()",
			"export class User {",
			"  @PrimaryGeneratedColumn()",
			"  id: string;",
			"  ",
			"  @Column()",
			"  name: string;",
			"  ",
			"  @Column({ default: 29 })",
			"  age: number;",
			"  ",
			"  @Column({ default: false })",
			"  isDead: boolean;",
			"}"
		]
	}
}
